col = "red", pch = 10, cex = 3)
points((crop[3] + crop[1])/2, (crop[4] + crop[2])/2,
col = "blue", pch = 10, cex = 3)
rect(crop[1], crop[2], crop[3], crop[4], border = "blue")
dim(im1)
crop
par(mar = c(0,0,0,0))
setwd("C:/Users/stri7929/Desktop")
im1 <- load.image("03017.jpg")
im1_c <- imager::enorm(imager::imgradient(imager::grayscale(im1),"xy"))
crop <- grabRect(im1, output = "coord")
im1_c_sub <- imsub(im1_c, x %inr% c(crop[1], crop[3]),
y %inr% c(crop[2], crop[4]))
jpeg("im1_temp.jpg",
width = dim(im1_c_sub)[1], height = dim(im1_c_sub)[2],
units = "px", quality = 100)
plot(im1_c_sub, axes = F)
dev.off()
im2 <- load.image("00151.jpg")
im2_c <- imager::enorm(imager::imgradient(imager::grayscale(im2),"xy"))
jpeg("im2_temp.jpg",
width = dim(im2_c)[1], height = dim(im2_c)[2],
units = "px", quality = 100)
plot(im2_c, axes = F)
dev.off()
i1 <- Rvision::image("im1_temp.jpg")
i2 <- Rvision::image("im2_temp.jpg")
m <- matchTemplate(i2, i1, method = "CCORR")
minmax <- minMaxLoc(m)
plot(im1, axes = F)
points(minmax[2, 2], minmax[2, 3],
col = "red", pch = 10, cex = 3)
rect(minmax[2,2] - ((crop[3] - crop[1])/2),
minmax[2,3] - ((crop[4] - crop[2])/2),
minmax[2,2] + ((crop[3] - crop[1])/2),
minmax[2,3] + ((crop[4] - crop[2])/2),
border = "red", lwd = 2)
points((crop[3] + crop[1])/2, (crop[4] + crop[2])/2,
col = "blue", pch = 10, cex = 3)
rect(crop[1], crop[2], crop[3], crop[4], border = "blue")
plot(i2, axes = F)
points(minmax[2, 2], minmax[2, 3],
col = "red", pch = 10, cex = 3)
rect(minmax[2,2] - ((crop[3] - crop[1])/2),
minmax[2,3] - ((crop[4] - crop[2])/2),
minmax[2,2] + ((crop[3] - crop[1])/2),
minmax[2,3] + ((crop[4] - crop[2])/2),
border = "red", lwd = 2)
points((crop[3] + crop[1])/2, (crop[4] + crop[2])/2,
col = "blue", pch = 10, cex = 3)
rect(crop[1], crop[2], crop[3], crop[4], border = "blue")
getwd()
library(imager)
library(dplyr)
library(qpdf)
im1 <- load.image("../images/image01.jpg")
im1_df <- as.data.frame(im1)
im1_df$id <- rep(1:(dim(im1)[1] * dim(im1)[2]), times = 3)
plot(im1)
red <- im1
red[,,,c(2:3)] <- c(0,0)
green <- im1
green[,,,c(1,3)] <- c(0,0)
blue <- im1
blue[,,,1:2] <- c(0,0)
par(mfrow = c(1,3), mar = c(.1,.1,.1,.1))
plot(red, axes = F)
plot(green, axes = F)
plot(blue, axes = F)
plot(grayscale(im1), axes = F)
par(mar = c(0,0,0,0))
plot(grayscale(im1), axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
im1_gr <- enorm(imgradient(grayscale(im1),"xy"))
im1_bw <- as.data.frame(im1_gr)
im1_bw$id <- 1:length(im1_bw$x)
plot(im1_gr, axes = F)
im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
#im_c <- c(187,30,202,229)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
#im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
im_c <- c(316,47,389,713)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
#im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
im_c <- c(316,47,389,713)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "yellow")
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
plot(grayscale(im1), axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
roi <- filter(im1_bw,
im1_bw$x >= im_c[1] & im1_bw$x <= im_c[3] &
im1_bw$y >= im_c[2] & im1_bw$y <= im_c[4])
## Find contours in region of interest
roi_c <- roi[roi$value >= .1,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .1,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("yellow")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .1,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("cyan1")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
#im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
im_c <- c(316,47,389,713)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "cyan1")
im2 <- load.image("../images/image02.jpg")
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
shift <- c(200,0)
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
## Find contours in region of interest
roi_cv <- roi[roi$value >= .1,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_cv$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("cyan1")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
im2 <- load.image("../images/image02.jpg")
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
shift <- c(200,0)
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im2)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im2)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im)[2])
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im2)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im2)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im2)[2])
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
im2 <- load.image("../images/image02.jpg")
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
shift <- c(300,0)
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im2)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im2)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im2)[2])
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
im3 <- load.image("../images/image03.jpg")
im3_df <- as.data.frame(im3)
im3_df$id <- 1:length(im1_bw$x)
plot(im3, axes = F)
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im2)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im2)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im2)[2])
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new, axes = F)
im3_gr <- enorm(imgradient(grayscale(im3),"xy"))
im3_bw <- as.data.frame(im3_gr)
im3_bw$id <- 1:length(im3_bw$x)
roi <- filter(im3_bw,
im3_bw$x >= im_c[1] & im3_bw$x <= im_c[3] &
im3_bw$y >= im_c[2] & im3_bw$y <= im_c[4])
roi_cv <- roi[roi$value >= .1,]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im2)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im2)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im2)[2])
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new, axes = F)
im3_gr <- enorm(imgradient(grayscale(im3),"xy"))
im3_bw <- as.data.frame(im3_gr)
im3_bw$id <- 1:length(im3_bw$x)
roi <- filter(im3_bw,
im3_bw$x >= im_c[1] & im3_bw$x <= im_c[3] &
im3_bw$y >= im_c[2] & im3_bw$y <= im_c[4])
roi_cv <- roi[roi$value >= .1,]
m_df <- im3_df[match(roi_cv$id, im3_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im3)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im3)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im3)[2])
im3_df$value[im3_df$id %in% m] <- rep(rgbcolor, each = length(m))
im3_new <- as.cimg(im3_df, dim = dim(im3))
plot(im3_new, axes = F)
im3_gr <- enorm(imgradient(grayscale(im3),"xy"))
im3_bw <- as.data.frame(im3_gr)
im3_bw$id <- 1:length(im3_bw$x)
roi <- filter(im3_bw,
im3_bw$x >= im_c[1] & im3_bw$x <= im_c[3] &
im3_bw$y >= im_c[2] & im3_bw$y <= im_c[4])
roi_cv <- roi[roi$value >= .05,]
m_df <- im3_df[match(roi_cv$id, im3_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im3)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im3)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im3)[2])
im3_df$value[im3_df$id %in% m] <- rep(rgbcolor, each = length(m))
im3_new <- as.cimg(im3_df, dim = dim(im3))
plot(im3_new, axes = F)
im3_gr <- enorm(imgradient(grayscale(im3),"xy"))
im3_bw <- as.data.frame(im3_gr)
im3_bw$id <- 1:length(im3_bw$x)
roi <- filter(im3_bw,
im3_bw$x >= im_c[1] & im3_bw$x <= im_c[3] &
im3_bw$y >= im_c[2] & im3_bw$y <= im_c[4])
roi_cv <- roi[roi$value >= .03,]
m_df <- im3_df[match(roi_cv$id, im3_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im3)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im3)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im3)[2])
im3_df$value[im3_df$id %in% m] <- rep(rgbcolor, each = length(m))
im3_new <- as.cimg(im3_df, dim = dim(im3))
plot(im3_new, axes = F)
im3_gr <- enorm(imgradient(grayscale(im3),"xy"))
im3_bw <- as.data.frame(im3_gr)
im3_bw$id <- 1:length(im3_bw$x)
roi <- filter(im3_bw,
im3_bw$x >= im_c[1] & im3_bw$x <= im_c[3] &
im3_bw$y >= im_c[2] & im3_bw$y <= im_c[4])
roi_cv <- roi[roi$value >= .05,]
m_df <- im3_df[match(roi_cv$id, im3_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im3)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im3)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im3)[2])
im3_df$value[im3_df$id %in% m] <- rep(rgbcolor, each = length(m))
im3_new <- as.cimg(im3_df, dim = dim(im3))
plot(im3_new, axes = F)
im3 <- load.image("../images/image03.jpg")
im3_df <- as.data.frame(im3)
im3_df$id <- 1:length(im1_bw$x)
plot(im3, axes = F)
im3_gr <- enorm(imgradient(grayscale(im3),"xy"))
im3_bw <- as.data.frame(im3_gr)
im3_bw$id <- 1:length(im3_bw$x)
roi <- filter(im3_bw,
im3_bw$x >= im_c[1] & im3_bw$x <= im_c[3] &
im3_bw$y >= im_c[2] & im3_bw$y <= im_c[4])
roi_cv <- roi[roi$value >= .05,]
m_df <- im3_df[match(roi_cv$id, im3_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im3)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im3)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im3)[2])
im3_df$value[im3_df$id %in% m] <- rep(rgbcolor, each = length(m))
im3_new <- as.cimg(im3_df, dim = dim(im3))
plot(im3_new, axes = F)
knitr::opts_chunk$set(
fig.width = 8,
fig.height = 6,
collapse = TRUE,
comment = "#>"
)
library(imager)
library(dplyr)
library(qpdf)
im1 <- load.image("../images/image01.jpg")
im1_df <- as.data.frame(im1)
im1_df$id <- rep(1:(dim(im1)[1] * dim(im1)[2]), times = 3)
plot(im1)
red <- im1
red[,,,c(2:3)] <- c(0,0)
green <- im1
green[,,,c(1,3)] <- c(0,0)
blue <- im1
blue[,,,1:2] <- c(0,0)
par(mfrow = c(1,3), mar = c(.1,.1,.1,.1))
plot(red, axes = F)
plot(green, axes = F)
plot(blue, axes = F)
plot(grayscale(im1), axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
im1_gr <- enorm(imgradient(grayscale(im1),"xy"))
im1_bw <- as.data.frame(im1_gr)
im1_bw$id <- 1:length(im1_bw$x)
plot(im1_gr, axes = F)
#im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
im_c <- c(316,47,389,713)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "cyan1")
roi <- filter(im1_bw,
im1_bw$x >= im_c[1] & im1_bw$x <= im_c[3] &
im1_bw$y >= im_c[2] & im1_bw$y <= im_c[4])
## Find contours in region of interest
roi_cv <- roi[roi$value >= .1,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_cv$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("cyan1")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
im2 <- load.image("../images/image02.jpg")
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
shift <- c(300,0)
## Recolor contour pixels in full image
x_shift <- shift[1]
y_shift <- -shift[2]
m_df <- im2_df[match(roi_cv$id, im2_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im2)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im2)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im2)[2])
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new, axes = F)
im3 <- load.image("../images/image03.jpg")
im3_df <- as.data.frame(im3)
im3_df$id <- 1:length(im1_bw$x)
plot(im3, axes = F)
im3_gr <- enorm(imgradient(grayscale(im3),"xy"))
im3_bw <- as.data.frame(im3_gr)
im3_bw$id <- 1:length(im3_bw$x)
roi <- filter(im3_bw,
im3_bw$x >= im_c[1] & im3_bw$x <= im_c[3] &
im3_bw$y >= im_c[2] & im3_bw$y <= im_c[4])
roi_cv <- roi[roi$value >= .05,]
m_df <- im3_df[match(roi_cv$id, im3_df$id),]
m_df$keep <- "Y"
for (i in seq_along(m_df$id)) {
if (m_df$x[i] + x_shift > dim(im3)[1]) {
m_df$keep[i] <- "N" }
if (m_df$x[i] + x_shift < 0) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift > dim(im3)[2]) {
m_df$keep[i] <- "N" }
if (m_df$y[i] + y_shift < 0) {
m_df$keep[i] <- "N" }
}
m <- m_df$id[m_df$keep == "Y"] + x_shift + (y_shift * dim(im3)[2])
im3_df$value[im3_df$id %in% m] <- rep(rgbcolor, each = length(m))
im3_new <- as.cimg(im3_df, dim = dim(im3))
plot(im3_new, axes = F)
devtools::document()
devtools::document()
library(dvetools)
library(devtools)
build_vignettes("contourr" "github-flavored")
build_vignettes("contourr", "github-flavored")
build_vignettes(".", "github-flavored")
build_vignettes(".", "github-flavored")
build_vignettes(".", "github-flavored")
