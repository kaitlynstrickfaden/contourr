library(rmarkdown)
library(devtools)
document()
image_name <- paste(image_split[1], "_contourr.", image_end, sep = "")
# Save new photo
jpeg(image_name, width = dim(im2)[1], height = dim(im2)[2]) # begin creation of an image file
library(devtools)
document()
document()
document()
document()
document()
document()
install.packages("qpdf")
library(qpdf)
document()
document()
library(devtools)
document()
document()
document()
devtools::check()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
build()
library(imager)
library(dplyr)
library(qpdf)
knitr::opts_chunk$set(
fig.width = 8,
fig.height = 6,
collapse = TRUE,
comment = "#>"
)
im1 <- load.image("../images/image01.jpg")
im1_df <- as.data.frame(im1)
im1_df$id <- rep(1:(dim(im1)[1] * dim(im1)[2]), times = 3)
plot(im1)
red <- im1
red[,,,c(2:3)] <- c(0,0)
green <- im1
green[,,,c(1,3)] <- c(0,0)
blue <- im1
blue[,,,1:2] <- c(0,0)
par(mfrow = c(1,3), mar = c(.1,.1,.1,.1))
plot(red, axes = F)
plot(green, axes = F)
plot(blue, axes = F)
plot(grayscale(im1), axes = F)
par(mar = c(.1,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.2,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.3,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.4,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(1,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.1,.5,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.1,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.1,.1,.1,.5))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.1,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(3,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(5,.1,.1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(5,.1,.1,5))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(5,.1,3,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(5,.1,2,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(5,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(.1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(5,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
par(mar = c(5,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
library(devtools)
library(rmarkdown)
?render
render("contourr.rmd", output_format = "github_document")
render("vignettes/contourr.rmd", output_format = "github_document")
document()
library(devtools)
document()
devtools::install_github("kaitlynstrickfaden/contourr", build_vignettes = T, force = T)
vignette("contourr")
library(contourr)
library(imager)
library(tidyverse)
im <- load.image("C://Users/stri7929/Documents/snowstake_images/image01.jpg")
im
ct_find(im)
library(tidyverse)
library(dplyr)
library(devtools)
install_github("contourr/kaitlynstrickfaden", force = T, build_vignettes = T)
install_github("kaitlynstrickfaden/contourr", force = T, build_vignettes = T)
#install.packages("imager") # just first time to get the package
library(imager)
install.packages("dplyr")
library(dplyr)
#install.packages("qpdf")
library(qpdf)
#install.packages(c("devtools", "dplyr", "imager", "stringr"))
library(devtools)
library(stringr)
library(usethis)
devtools::install_github("kaitlynstrickfaden/contourr", build_vignettes = TRUE)
library(contourr)
knitr::opts_chunk$set(
fig.width = 8,
fig.height = 6,
collapse = TRUE,
comment = "#>"
)
im1 <- load.image("images/image01.jpg")
getwd()
im1 <- load.image("~images/image01.jpg")
im1 <- load.image("/images/image01.jpg")
im1 <- load.image("C:/Users/stri7929/Documents/GitHub/contourr/images/image01.jpg")
im1_df <- as.data.frame(im1)
im1_df$id <- rep(1:(dim(im1)[1] * dim(im1)[2]), times = 3)
plot(im1)
red <- im1
red[,,,c(2:3)] <- c(0,0)
green <- im1
green[,,,c(1,3)] <- c(0,0)
blue <- im1
blue[,,,1:2] <- c(0,0)
par(mfrow = c(1,3), mar = c(.1,.1,.1,.1))
plot(red, axes = F)
plot(green, axes = F)
plot(blue, axes = F)
plot(grayscale(im1), axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
im1_gr <- enorm(imgradient(grayscale(im1),"xy"))
im1_bw <- as.data.frame(im1_gr)
im1_bw$id <- 1:length(im1_bw$x)
plot(im1_gr, axes = F)
#im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
im_c <- c(187,30,202,229)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
roi <- filter(im1_bw,
im1_bw$x >= im_c[1] & im1_bw$x <= im_c[3] &
im1_bw$y >= im_c[2] & im1_bw$y <= im_c[4])
roi
im1_bw
roi
im
im_c
roi
im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
im_c
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
#im_c <- c(187,30,202,229)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
#im_c <- c(187,30,202,229)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
roi <- filter(im1_bw,
im1_bw$x >= im_c[1] & im1_bw$x <= im_c[3] &
im1_bw$y >= im_c[2] & im1_bw$y <= im_c[4])
roi
str(im_c)
is.vector(im_c)
is.double(im_c)
is.single(im_c)
is.character(im_c)
is.integer(im_c)
#install.packages("imager") # just first time to get the package
library(imager)
#install.packages("dplyr")
library(dplyr)
#install.packages("qpdf")
library(qpdf)
#install.packages(c("devtools", "dplyr", "imager", "stringr"))
library(devtools)
library(stringr)
library(usethis)
devtools::install_github("kaitlynstrickfaden/contourr", build_vignettes = TRUE)
library(contourr)
ss_image <- "C:/Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053"
im1 <- load.image("images/image01.jpg")
im1 <- load.image(ss_image)
ss_image <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053"
im1 <- load.image(ss_image)
ss_image <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053.jpg"
im1 <- load.image(ss_image)
im1_df <- as.data.frame(im1)
im1_df$id <- rep(1:(dim(im1)[1] * dim(im1)[2]), times = 3)
plot(im1)
ss_image1 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053.jpg"
im1 <- load.image(ss_image)
im1_df <- as.data.frame(im1)
im1_df$id <- rep(1:(dim(im1)[1] * dim(im1)[2]), times = 3)
plot(im1)
red <- im1
red[,,,c(2:3)] <- c(0,0)
green <- im1
green[,,,c(1,3)] <- c(0,0)
blue <- im1
blue[,,,1:2] <- c(0,0)
par(mfrow = c(1,3), mar = c(.1,.1,.1,.1))
plot(red, axes = F)
plot(green, axes = F)
plot(blue, axes = F)
plot(grayscale(im1), axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
im1_gr <- enorm(imgradient(grayscale(im1),"xy"))
im1_bw <- as.data.frame(im1_gr)
im1_bw$id <- 1:length(im1_bw$x)
plot(im1_gr, axes = F)
im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
#im_c <- c(187,30,202,229)
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
im_c
roi <- filter(im1_bw,
im1_bw$x >= im_c[1] & im1_bw$x <= im_c[3] &
im1_bw$y >= im_c[2] & im1_bw$y <= im_c[4])
## Find contours in region of interest
roi_c <- roi[roi$value >= .1,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .08,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .06,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
ss_image2 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0476_02586.jpg"
im2 <- load.image(ss_image2)
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
## Recolor contour pixels in full image
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
im_c <- grabRect(im1, output = "coord") # draw a box around the object of interest
plot(im1, axes = F)
rect(im_c[1], im_c[2], im_c[3], im_c[4], border = "red")
roi <- filter(im1_bw,
im1_bw$x >= im_c[1] & im1_bw$x <= im_c[3] &
im1_bw$y >= im_c[2] & im1_bw$y <= im_c[4])
## Find contours in region of interest
roi_c <- roi[roi$value >= .05,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .07,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .08,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .1,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .12,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
ss_image2 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0476_02586.jpg"
im2 <- load.image(ss_image2)
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
## Recolor contour pixels in full image
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
## Find contours in region of interest
roi_c <- roi[roi$value >= .10,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
ss_image2 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0476_02586.jpg"
im2 <- load.image(ss_image2)
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
## Recolor contour pixels in full image
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
## Find contours in region of interest
roi_c <- roi[roi$value >= .08,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
ss_image2 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0476_02586.jpg"
im2 <- load.image(ss_image2)
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
## Recolor contour pixels in full image
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
## Find contours in region of interest
roi_c <- roi[roi$value >= .06,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
ss_image2 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0476_02586.jpg"
im2 <- load.image(ss_image2)
im2_df <- as.data.frame(im2)
im2_df$id <- 1:length(im1_bw$x)
plot(im2, axes = F)
## Find contours in region of interest
roi_c <- roi[roi$value >= .06,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Recolor contour pixels in full image
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
## Find contours in region of interest
roi_c <- roi[roi$value >= .05,]
## Find contour pixels in full image
m <- im1_df$id[match(roi_c$id, im1_df$id)]
## Recolor contour pixels in full image
rgbcolor <- col2rgb("red")/255
im1_df$value[im1_df$id %in% m] <- rep(rgbcolor, each = length(m))
im1_new <- as.cimg(im1_df, dim = dim(im1))
plot(im1_new, axes = F)
## Recolor contour pixels in full image
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new)
## Recolor contour pixels in full image
im2_df$value[im2_df$id %in% m] <- rep(rgbcolor, each = length(m))
im2_new <- as.cimg(im2_df, dim = dim(im2))
plot(im2_new, axes = F)
red <- im1
red[,,,c(2:3)] <- c(0,0)
green <- im1
green[,,,c(1,3)] <- c(0,0)
blue <- im1
blue[,,,1:2] <- c(0,0)
par(mfrow = c(1,3), mar = c(.1,.1,.1,.1))
plot(red, axes = F)
plot(green, axes = F)
plot(blue, axes = F)
library(contourr)
#install.packages("imager") # just first time to get the package
library(imager)
#install.packages("dplyr")
library(dplyr)
#install.packages("qpdf")
library(qpdf)
#install.packages(c("devtools", "dplyr", "imager", "stringr"))
library(devtools)
library(stringr)
library(usethis)
#devtools::install_github("kaitlynstrickfaden/contourr", build_vignettes = TRUE)
library(contourr)
ss_image1 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053.jpg"
ct_find(ss_image1)
ct_find(ss_image1, contourvalue = .08)
ct_find(ss_image1, contourvalue = .08)
ct_find(ss_image1, contourvalue = .05)
#install.packages("imager") # just first time to get the package
library(imager)
#install.packages("dplyr")
library(dplyr)
#install.packages("qpdf")
library(qpdf)
#install.packages(c("devtools", "dplyr", "imager", "stringr"))
library(devtools)
library(stringr)
library(usethis)
#devtools::install_github("kaitlynstrickfaden/contourr", build_vignettes = TRUE)
library(contourr)
ss_image1 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053.jpg"
im1 <- load.image(ss_image)
red <- im1
ss_image1 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053.jpg"
im1 <- load.image(ss_image)
ss_image1 <- "C://Users/stri7929/Documents/Snow Modeling/19-20_Analysis/Snowstake_Photos/IDFG0220_01053.jpg"
im1 <- load.image(ss_image1)
im1_df <- as.data.frame(im1)
im1_df$id <- rep(1:(dim(im1)[1] * dim(im1)[2]), times = 3)
plot(im1)
red <- im1
red[,,,c(2:3)] <- c(0,0)
green <- im1
green[,,,c(1,3)] <- c(0,0)
blue <- im1
blue[,,,1:2] <- c(0,0)
par(mfrow = c(1,3), mar = c(.1,.1,.1,.1))
plot(red, axes = F)
plot(green, axes = F)
plot(blue, axes = F)
par(mar = c(1,.1,1,.1))
im1_xy <- imgradient(grayscale(im1), "xy")
plot(im1_xy, layout = "row", axes = F)
im1_gr <- enorm(imgradient(grayscale(im1),"xy"))
im1_bw <- as.data.frame(im1_gr)
im1_bw$id <- 1:length(im1_bw$x)
plot(im1_gr, axes = F)
im1_bw
min(im1_bw$value)
max(im1_bw$value)
library(devtools)
devtools::document()
